---
thread: "GetText Tutorial"
id_msg: 908328
date: "2019-04-14 19:25:33"

subject: "Re:GetText Tutorial"
user: "yap320sorgesoureDug"



icon: xx




---
<div align="center"><span style="font-family: georgia;" class="bbc_font"><span style="font-size: 22pt;" class="bbc_size"><strong><span class="bbc_u">PHP Gettext: Quick Start Guide to Creating Translations Using gettext in PHP</span></strong></span></span></div><br /><span style="font-size: 12pt;" class="bbc_size">Wouldnt it be nice if you could create local language versions of your web app for all your international users? gettext, an open source internationalization and localization system makes it possible. It works with multiple languages, including PHP, and makes the entire translation process easy to manage and maintain.<br /><br />In this tutorial, we will learn how to install, set up and create simple translations using PHP gettext. Check out this course for a more in-depth tutorial on <a href="https://udemyblog.wpengine.com/internationalization-i18n-with-php-and-gettext/?tc=blog.phpgettext" class="bbc_link new_win" target="_blank">internationalization (i18n) with PHP and gettext</a>.</span><br /><br /><span style="font-size: 22pt;" class="bbc_size"><strong>What is gettext?</strong></span><br /><br /><span style="font-size: 12pt;" class="bbc_size">In the early 1990s, as computing became truly global, programmers realized the importance of creating multi-lingual versions of their software. This was more than a translation problem; it was a coding nightmare. Programmers often had to create multiple copies of the same code to serve up different versions of the website in local languages.<br /><br />To remedy this problem, Sun Microsystems developed a system called <strong>gettext</strong> in the 1990s. A few years later, the GNU Project released <strong>GNU gettext</strong>, which was an open source implementation of Suns gettext system.<br /><br />Using gettextis relatively simple in principle. It involves modifying the original English source code to include the gettext(string) function. gettext then returns a local language of the specified string stored in an external file.<br /><br />Over the years, gettext has been implemented in several languages, including C++, C#, ASP.net, Perl, Ruby, and of course, PHP. It is now the standard internationalization (shortened to i18n  i-18 letters-n) system across languages.</span><br /><br /><span style="font-size: 22pt;" class="bbc_size"><strong>Using gettext in PHP</strong></span><br /><br /><span style="font-size: 20pt;" class="bbc_size">Installation</span><br /><br /><span style="font-size: 12pt;" class="bbc_size"><strong>Note:</strong> This tutorial assumes you already have PHP and Apache web server installed on your local machine. If you have not, grab a copy of XAMPP. Learn how to install and enable XAMPP in this tutorial.<br /><br />To use gettext in PHP, you first need to download and install a copy of GNU gettext. Windows users can download a copy from the <a href="http://gnuwin32.sourceforge.net/packages/gettext.htm" class="bbc_link new_win" target="_blank">official GNU Windows website</a>. Mac and Linux users can <a href="http://www.gnu.org/software/gettext/" class="bbc_link new_win" target="_blank">get a copy here</a>.<br /><br />Once downloaded and install, you need to enable gettext in PHP. To do this, open your <strong>PHP.ini</strong> file (located in the root PHP folder) and search for gettext.<br /><br />You should find a line that looks like this:<br /><br /><span style="font-family: courier;" class="bbc_font"><em>;extension=php_gettext.dll</em></span><br /><br />Remove the semicolon (;) from the line. This is what your PHP.ini file should look like now:</span><br /><br /><img src="https://i.imgur.com/vNULGOS.jpg" alt="" class="bbc_img" /><br /><br /><span style="font-size: 12pt;" class="bbc_size">To test whether gettext is installed properly or not, create a new file named <em>test.php</em> and add the following code to it:</span><br /><br /><img src="https://i.imgur.com/HEd0nrO.jpg" alt="" class="bbc_img" /><br /><br /><span style="font-size: 12pt;" class="bbc_size">Save this file in the <strong><em>htdocs</em></strong> folder in your main <strong><em>xampp</em></strong> directory (usually <em>c:\xampp\htdocs</em>). Now make sure Apache web server is turned on, and then navigate to <strong><em>localhost\test.php</em></strong> in your browser.<br /><br />If gettext is properly installed, you should see this message:</span><br /><br /><img src="https://i.imgur.com/blyVuRa.jpg" alt="" class="bbc_img" /><br /><br /><span style="font-size: 18pt;" class="bbc_size">Setting Up gettext Environment</span><br /><br /><span style="font-size: 12pt;" class="bbc_size">The gettext function requires a specific file/folder structure to work.<br /><br />In your root directory (<em>htdocs\</em>) create a new folder named <strong>Test_Project</strong>. Create another folder named <strong>Locale</strong> inside it. In the <strong>Locale</strong> folder, create a sub-directory named <strong>en_US</strong>. This sub-directory should hold another folder named <strong>LC_MESSAGES</strong>, as shown below:</span><br /><br /><img src="https://i.imgur.com/czndgqj.jpg" alt="" class="bbc_img" /><br /><br /><span style="font-size: 12pt;" class="bbc_size">In the above structure:</span><br /><br /><ul class="bbc_list"><li><span style="font-size: 12pt;" class="bbc_size"><strong>Test_Project</strong> is just the name of our example project. You can name this anything.</span></li><li><span style="font-size: 12pt;" class="bbc_size">The <strong>Locale</strong> folder holds all translation files for different languages. You can name this anything as well, though <em>Locale</em> is the standard name.</span></li><li><span style="font-size: 12pt;" class="bbc_size">The <strong>en_US</strong> holds language files for the English (United States) language. <em>en_US</em> is a standard two-part abbreviation for the English (US) language. The same for English (UK) is <em>en_GB</em>. You <strong>must</strong> name this folder exactly as the language you wish to translate the code in.</span></li><li><span style="font-size: 12pt;" class="bbc_size">For example, if you wanted to hold translation for Colombian Spanish, you would name the folder <em>es_CO</em>. You can see a complete <a href="http://www.science.co.il/Language/Locale-codes.asp" class="bbc_link new_win" target="_blank">list of language codes here</a>.</span></li><li><span style="font-size: 12pt;" class="bbc_size">The <strong>LC_MESSAGES</strong> folder holds the actual translated messages. You <strong>must</strong> keep this folder name exactly the same for gettext to work.</span></li></ul><br /><span style="font-size: 18pt;" class="bbc_size">Creating the Translation Files</span><br /><br /><span style="font-size: 12pt;" class="bbc_size">All translations in gettext are stored in a PO (Portable Object) file. You would have different <strong>*.po</strong> files for different language translations.<br /><br />Before you can create the PHP code for the translation, you have to create the appropriate .po file. You can use a program like POEdit to create .po files. You can download a copy of POEdit here.<br /><br />In POEdit, create a new translation file by hitting CTRL + N or selecting File -&gt; New.</span><br /><br /><img src="https://i.imgur.com/in9wHZ8.jpg" alt="" class="bbc_img" /><br /><br /><span style="font-size: 12pt;" class="bbc_size">Youll be asked to choose a language in the next window. Pick English (United States) for now.</span><br /><br /><img src="https://i.imgur.com/hDGijqG.jpg" alt="" class="bbc_img" /><br /><br /><span style="font-size: 12pt;" class="bbc_size">Click on the Save icon to save the file. Name it messages. Make sure to save it in the LC_MESSAGES folder.</span><br /><br /><img src="https://i.imgur.com/KWI8yER.jpg" alt="" class="bbc_img" /><br /><br /><span style="font-size: 12pt;" class="bbc_size">Now open the messages.po file in the en_US folder. It should look something like this:</span><br /><br /><img src="https://i.imgur.com/Rmd3STE.jpg" alt="" class="bbc_img" /><br /><br /><span style="font-size: 12pt;" class="bbc_size">Add the following code on a separate line below the above code:</span><br /><br /><img src="https://i.imgur.com/grosRZo.jpg" alt="" class="bbc_img" /><br /><br /><span style="font-size: 12pt;" class="bbc_size">This is our actual translation.</span><br /><br /><ul class="bbc_list"><li><span style="font-size: 12pt;" class="bbc_size">The first line, beginning with (#) is just a comment.</span></li><li><span style="font-size: 12pt;" class="bbc_size"><strong>msgid </strong>identifies the text string that needs to be translated.</span></li><li><span style="font-size: 12pt;" class="bbc_size"><strong>msgstr </strong>is the translated text that will replace the msgid.</span></li></ul><br /><span style="font-size: 12pt;" class="bbc_size">Now save the .po file and re-open it in POEdit. Hit Save. This will re-compile the translation and make it ready for delivery.</span><br /><br /><span style="font-size: 18pt;" class="bbc_size">Creating the PHP File</span><br /><br /><span style="font-size: 12pt;" class="bbc_size">Create a new PHP file and name it test_project.php. Add the following code to it:</span><br /><br /><img src="https://i.imgur.com/lkpn4pz.jpg" alt="" class="bbc_img" /><br /><br /><span style="font-size: 12pt;" class="bbc_size">Save the file and open it in your web browser by going to <em>localhost/Test_Project/test_project.php</em>.<br /><br />You should see the translated string (This is a translated string), like this:</span><br /><br /><img src="https://i.imgur.com/5MOOHmD.jpg" alt="" class="bbc_img" /><br /><br /><span style="font-size: 12pt;" class="bbc_size">Congratulations, youve just used PHP gettext to create a web page translation!</span>
