---
thread: "Moonloader y Lua scripts"
id_msg: 908654
date: "2019-09-09 01:03:37"

subject: "Re:Moonloader y Lua scripts"
user: "syn437sorgesoureDug"



icon: xx




---
<div align="center"><span style="font-size: 14pt;" class="bbc_size"><strong>Apuntes de lua</strong></span></div>Página de tutorial fuente:<br /><a href="https://www.tutorialspoint.com/lua/lua_basic_syntax.htm" class="bbc_link new_win" target="_blank">https://www.tutorialspoint.com/lua/lua_basic_syntax.htm</a><br /><br /><div align="center">Capítulo: Lua - Sintáxis básica</div><br />Comentarios:<br /><div class="codeheader">Código: <a href="javascript:void(0);" onclick="return smfSelectText(this);" class="codeoperation">[Seleccionar]</a></div><code class="bbc_code">--comentario de linea simple<br />--[[<br />comentario multilínea<br />--]]</code><br /><div align="center">Capítulo: Lua - Variables</div><br /><div class="codeheader">Código: <a href="javascript:void(0);" onclick="return smfSelectText(this);" class="codeoperation">[Seleccionar]</a></div><code class="bbc_code">local d , f = 5 ,10&nbsp; &nbsp; &nbsp;--declaration of d and f as local variables. <br />d , f = 5, 10;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; --declaration of d and f as global variables. <br />d, f = 10&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;--[[declaration of d and f as global variables. <br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Here value of f is nil --]]</code><br />Me da risa porque Lua permite estas bellezas:<br /><div class="codeheader">Código: <a href="javascript:void(0);" onclick="return smfSelectText(this);" class="codeoperation">[Seleccionar]</a></div><code class="bbc_code">-- Swapping of variables<br />b, a = a, b</code><div class="codeheader">Código: <a href="javascript:void(0);" onclick="return smfSelectText(this);" class="codeoperation">[Seleccionar]</a></div><code class="bbc_code">g,l = 20,30 --asignar valores a 2 variables en la misma linea</code><br /><div align="center">Lua - Data Types</div><br /><table class="bbc_table"><tr><td>#</td><td>Tipo</td><td>Descripción</td></tr><tr><td>1</td><td>nil</td><td>parece ser el equivalente al null?</td></tr><tr><td>2</td><td>boolean</td><td>verdadero o falso</td></tr><tr><td>3</td><td>number</td><td>números reales (double)</td></tr><tr><td>4</td><td>string</td><td>cadena de caracteres</td></tr><tr><td>5</td><td>function</td><td>método escrito en C o Lua (?)</td></tr><tr><td>6</td><td>userdata</td><td>dato arbitrario en C</td></tr><tr><td>7</td><td>thread</td><td>proceso independiente en ejecución</td></tr><tr><td>8</td><td>table</td><td>para arrays, tablas, &#039;sets&#039;, &quot;records&quot;, &quot;graphs&quot;, &quot;trees&quot;, etc (arrays asociativos)</td></tr></table><br /><div class="codeheader">Código: <a href="javascript:void(0);" onclick="return smfSelectText(this);" class="codeoperation">[Seleccionar]</a></div><code class="bbc_code">print(type(&quot;What is my type&quot;))&nbsp; &nbsp;--&gt; string<br />t = 10<br /><br />print(type(5.8*t))&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;--&gt; number<br />print(type(true))&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; --&gt; boolean<br />print(type(print))&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;--&gt; function<br />print(type(nil))&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;--&gt; nil<br />print(type(type(ABC)))&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;--&gt; string</code><br /><div align="center">Lua - Operators</div><br /><table class="bbc_table"><tr><td>Operador</td><td>Descripción</td><td>Ejemplo (para A=10 y B=20)</td></tr><tr><td>+</td><td>Suma</td><td>A+B dará 30</td></tr><tr><td>-</td><td>Resta</td><td>A-B dará -10</td></tr><tr><td>*</td><td>Multiplicación</td><td>A*B dará 200</td></tr><tr><td>/</td><td>División</td><td>B/A dará 2</td></tr><tr><td>%</td><td>Módulo</td><td>B%A dará 0</td></tr><tr><td>^</td><td>Exponente</td><td>A^2 dará 100</td></tr><tr><td>-</td><td>- Unitario, negación</td><td>-A dará -10</td></tr></table><br />Operadores relacionales (comparadores)<br /><br /><table class="bbc_table"><tr><td>Operador</td><td>Descripción</td><td>Ejemplo</td></tr><tr><td>==</td><td>¿es igual a?</td><td>A==B devolverá falso</td></tr><tr><td>~=</td><td>¿es distinto de?</td><td>A~=B devolverá verdadero</td></tr><tr><td>&gt;</td><td>¿mayor que?</td><td>A&gt;B devolverá falso</td></tr><tr><td>&lt;</td><td>¿menor que?</td><td>A&lt;B devolverá verdadero</td></tr><tr><td>&gt;=</td><td>¿mayor o igual que?</td><td>A&gt;=B devolverá falso</td></tr><tr><td>&lt;=</td><td>¿menor o igual que?</td><td>A&gt;=B devolverá verdadero</td></tr></table><br />Operadores lógicos<br /><br /><table class="bbc_table"><tr><td>Operador</td><td>Descripción</td><td>Ejemplo</td></tr><tr><td>and</td><td>solo devuelve true si ambos operandos son true, en otro caso devuelve false</td><td>(A and B) es falso</td></tr><tr><td>or</td><td>devuelve verdadero en todos los casos excepto cuando ambos operadores son falsos (dicho de otro modo, basta con que uno de éstos sea verdadero para que el resultado sea verdadero)</td><td>(A or B) es verdadero</td></tr><tr><td>not</td><td>operador negador: invierte el valor lógico del operando</td><td>!(A and B) es verdadero</td></tr></table><br />Operadores miscelaneos<br /><br /><table class="bbc_table"><tr><td>Operador</td><td>Descripción</td><td>Ejemplo</td></tr><tr><td>..</td><td>Concatenación de strings</td><td>&quot;Hola&quot;..&quot; &quot;..&quot;mundo!&quot;</td></tr><tr><td>#</td><td>Retorna la longitud de un string o una tabla (a mira vos que util cómo no hay de ésto en otros lenguajes!)</td><td>#&quot;Hola&quot; retornará 4</td></tr></table><br />Precedencia de operadores<br /><table class="bbc_table"><tr><td>Categoría</td><td>Operador</td><td>Asociatividad</td></tr><tr><td>unary</td><td>not, #, -</td><td>Right to left</td></tr><tr><td>Concatenación</td><td>..</td><td>Right to left</td></tr><tr><td>Multiplicativos</td><td>*, /, %</td><td>Left to right</td></tr><tr><td>Aditivos</td><td>+, -</td><td>Left to right</td></tr><tr><td>Relacionales</td><td>&lt;, &gt;, &lt;=, &gt;=, ==, ~=</td><td>Left to right</td></tr><tr><td>Igualdad</td><td>==, ~=</td><td>Left to right</td></tr><tr><td>Lógico AND</td><td>and</td><td>Left to right</td></tr><tr><td>Lógico OR</td><td>or</td><td>Left to right</td></tr></table>
