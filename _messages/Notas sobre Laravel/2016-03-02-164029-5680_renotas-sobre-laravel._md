---
thread: "Notas sobre Laravel"
id_msg: 5680
date: "2016-03-02 16:40:29"

subject: "Re:Notas sobre Laravel"
user: "yap320sorgesoureDug"

modified_time: 2016-03-02 16:52:07
modified_name: "yap320sorgesoureDug"
icon: xx



edit_reason: "pos nomas"
---
<strong><span style="font-size: 14pt;" class="bbc_size">Middlewares</span></strong><br /><br />Al fin llegamos a este capítulo tan especial y ya casi al final de estos jodidos y castrantes tutoriales!!<br /><br />En este primer ejemplo vemos cómo hacer uso del middleware de &#039;Auth&#039; (que vendría siendo básicamente la manera de exigir al usuario que se encuentre &quot;loggeado&quot; (o registrado y conectado) para poder acceder a una ruta específica. Si queremos que solo usuarios registrados (indistintamente de su tipo) tengan acceso a la ruta <em>admin/users</em>, entonces agregamos en el constructor del controlador <em>UsersController</em>:<br /><br /><div class="codeheader">Código: <a href="javascript:void(0);" onclick="return smfSelectText(this);" class="codeoperation">[Seleccionar]</a></div><code class="bbc_code">public function __construct()<br />{<br />&nbsp; &nbsp; $this-&gt;middleware(&#039;auth&#039;);<br />}</code><br />O también podemos irnos a <em>app/Http/<strong>routes.php</strong></em>, y, en la parte donde definimos la ruta para nuestro Admin/UsersController, agregar:<br /><div class="quoteheader"><div class="topslice_quote">Citar</div></div><blockquote class="bbc_standard_quote">Route::group(&#91;&#039;prefix&#039; =&gt; &#039;admin&#039;, <strong>&#039;middleware&#039; =&gt; &#039;auth&#039;, </strong>&#039;namespace&#039; =&gt; &#039;Admin&#039;], function(){<br />&nbsp;&nbsp;&nbsp;Route::resource(&#039;users&#039;, &#039;UsersController&#039;);<br />});</blockquote><div class="quotefooter"><div class="botslice_quote"></div></div><br />El efecto de ésto es que si no te encuentras &quot;loggeado&quot; y tratas de acceder a la ruta <em>admin/users</em>, entonces serás redirigido a la página de Login, y una vez ingreses tus datos y seas verificado, serás redirigido de nuevo a la página que estabas tratando de entrar en primer lugar (<em>admin/users</em>).<br /><br />Otro ejemplo de middleware es cuando deseas entrar en la página de Login pero ya te encuentras &quot;loggeado&quot;, pues no tendría mucho sentido mostrarte de nuevo el formulario de Login, sino que en su lugar te muestre un aviso de que ya te encuentras conectado. Eso funciona gracias al controlador <em>AuthController</em> que en su constructor se encuentra la línea de código:<br /><div class="codeheader">Código: <a href="javascript:void(0);" onclick="return smfSelectText(this);" class="codeoperation">[Seleccionar]</a></div><code class="bbc_code">$this-&gt;middleware(&#039;guest&#039;, &#91;&#039;except&#039; =&gt; &#039;getLogout&#039;]);</code><br />Este middleware te impide el acceso a la página de Login, a menos que seas un usuario del tipo &quot;guest&quot; o invitado, del mismo modo que el middleware &#039;auth&#039; te impide el acceso a una ruta a menos que el usuario se encuentre autenticado (osea, registrado).
