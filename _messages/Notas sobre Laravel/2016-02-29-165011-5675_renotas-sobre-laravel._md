---
thread: "Notas sobre Laravel"
id_msg: 5675
date: "2016-02-29 16:50:11"

subject: "Re:Notas sobre Laravel"
user: "yap320sorgesoureDug"

modified_time: 2016-02-29 23:57:52
modified_name: "yap320sorgesoureDug"
icon: xx



edit_reason: "pos nomas"
---
<strong><span style="font-size: 14pt;" class="bbc_size">Integrando AJAX y jQuery a Laravel (Botón <em>Eliminar</em>)</span></strong><br /><br />Hasta ahora, para poder integrar la función de eliminar usuarios en nuestra página (a través de un panel de administración - ruta <em>admin/users</em>), lo hacíamos a través de un enlace ó botón de editar, pero al lado dejábamos un botón o enlace de eliminar vacío y carente de funcionalidad, pues vamos a darle la funcionalidad a través de jQuery.<br /><br /><strong>Algunas generalidades previas</strong><br /><br />La primera forma de eliminar usuarios es a traves del botón editar, que te lleva a una página que te muestra los datos del usuario que deseas editar/eliminar. En esa página hay un formulario con campos para ser editados y un botón de editar, y además un formulario aparte con un botón de eliminar y algunos campos ocultos que llevan información sin la cual no podríamos invocar el método <em>destroy()</em>. En otras palabras, no podemos ejecutar la acción de eliminar usuarios a través de un simple enlace (tag <em>&lt;a&gt;</em>), sino que necesariamente requerimos un formulario.<br /><br />Si desearamos darle esa funcionalidad al enlace de eliminar que se encuentra en el index, al lado de editar, simplemente reemplazando el enlace por un formulario, entonces, por tratárse de una tabla donde está contenida esa información, tendríamos que agregar un formulario por cada enlace de eliminar que le pertenece a cada usuario, en cada fila de la tabla.<br /><br />Ni idea de si eso traiga algún problema de performance de la página, o la sobrecargue, pero lo cierto es que con js y jQuery solo necesitamos agregar un solo formulario oculto, y el script hecho con js le dará el dinamismo suficiente para convertirlo en formulario de eliminación para cualquiera que sea el enlace de eliminar al que se le dé click.<br /><br /><strong>Paso 1: dotamos de identificadores y clases al html para poder manejarlo desde js:</strong><br /><br />En <strong>negrita</strong>: código agregado:<br /><div class="quoteheader"><div class="topslice_quote">Citar</div></div><blockquote class="bbc_standard_quote">&lt;table class=&quot;table table-striped&quot;&gt;<br />&nbsp; &nbsp; &lt;tr&gt;<br />&nbsp; &nbsp; &nbsp; &nbsp; &lt;td&gt;#&lt;/td&gt;<br />&nbsp; &nbsp; &nbsp; &nbsp; &lt;td&gt;Nombre&lt;/td&gt;<br />&nbsp; &nbsp; &nbsp; &nbsp; &lt;td&gt;Email&lt;/td&gt;<br />&nbsp; &nbsp; &nbsp; &nbsp; &lt;td&gt;Tipo&lt;/td&gt;<br />&nbsp; &nbsp; &nbsp; &nbsp; &lt;td&gt;Acciones&lt;/td&gt;<br />&nbsp; &nbsp; &lt;/tr&gt;<br />&nbsp; &nbsp; @foreach($users as $user)<br />&nbsp; &nbsp; &lt;tr <strong>id=&quot;{{ $user-&gt;id }}&quot;</strong>&gt;<br />&nbsp; &nbsp; &nbsp; &nbsp; &lt;td&gt;{{ $user-&gt;id }}&lt;/td&gt;<br />&nbsp; &nbsp; &nbsp; &nbsp; &lt;td&gt;{{ $user-&gt;name }}&lt;/td&gt;<br />&nbsp; &nbsp; &nbsp; &nbsp; &lt;td&gt;{{ $user-&gt;email }}&lt;/td&gt;<br />&nbsp; &nbsp; &nbsp; &nbsp; &lt;td&gt;{{ $user-&gt;type }}&lt;/td&gt;<br />&nbsp; &nbsp; &nbsp; &nbsp; &lt;td&gt;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;a href=&quot;{!! route(&#039;admin.users.edit&#039;, $user) !!}&quot;&gt;Editar&lt;/a&gt;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;a href=&quot;&quot; <strong>class=&quot;btn-delete&quot;</strong>&gt;Eliminar&lt;/a&gt;<br />&nbsp; &nbsp; &nbsp; &nbsp; &lt;/td&gt;<br />&nbsp; &nbsp; &lt;/tr&gt;<br />&nbsp; &nbsp; @endforeach<br />&lt;/table&gt;<br /></blockquote><div class="quotefooter"><div class="botslice_quote"></div></div><br />Recuerden que ésta tabla se encuentra al final de una sección de blade, así que el formulario lo podemos agregar al final de dicha sección. El formulario que vamos a agregar puede ser código duplicado del formulario de eliminación que habíamos creado anteriormente, pero con algunas modificaciones:<br /><div class="quoteheader"><div class="topslice_quote">Citar</div></div><blockquote class="bbc_standard_quote">{!! Form::model($user, &#91;&#039;route&#039; =&gt; &#91;&#039;admin.users.destroy&#039;, <strong>&#039;:USER_ID&#039;</strong>], &#039;method&#039; =&gt; &#039;DELETE&#039;<strong>, &#039;id&#039; =&gt; &#039;form-delete&#039;</strong>]) !!}<br />{!! Form::close() !!}</blockquote><div class="quotefooter"><div class="botslice_quote"></div></div>Fíjense que le hemos quitado el <em>&lt;button&gt;</em> que tenía, reemplazamos $user por &#039;:USER_ID&#039; que solo va a tomar el rol de &quot;placeholder&quot;, es decir, va a ser reemplazado despues por el id que queremos, mediante técnicas básicas de js de sustitución de cadenas (strings), y además se le dio una etiqueta para el &quot;id&quot; de valor &quot;form-delete&quot;, para poder ser reconocido por el jQuery, así: $(&quot;#form-delete&quot;).<br /><br />Agregamos el formulario al final de la sección, así:<br /><div class="quoteheader"><div class="topslice_quote">Citar</div></div><blockquote class="bbc_standard_quote">@section(&#039;content&#039;)<br />&nbsp; &nbsp; &lt;div class=&quot;container&quot;&gt;<br />&nbsp; &nbsp; &nbsp; &nbsp; &lt;div class=&quot;row&quot;&gt;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;div class=&quot;col-md-10 col-md-offset-1&quot;&gt;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;div class=&quot;panel panel-default&quot;&gt;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;div class=&quot;panel-heading&quot;&gt;Usuarios&lt;/div&gt;<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ...<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;div class=&quot;panel-body&quot;&gt;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ...<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;table class=&quot;table table-striped&quot;&gt; ... &lt;/table&gt;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ...<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;<br />&nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;<br />&nbsp; &nbsp; &lt;/div&gt;<br /><br />&nbsp; &nbsp; <strong>{!! Form::model($user, &#91;&#039;route&#039; =&gt; &#91;&#039;admin.users.destroy&#039;, &#039;:USER_ID&#039;], &#039;method&#039; =&gt; &#039;DELETE&#039;, &#039;id&#039; =&gt; &#039;form-delete&#039;]) !!}</strong><br />&nbsp; &nbsp; <strong>{!! Form::close() !!}</strong><br />@endsection<br /></blockquote><div class="quotefooter"><div class="botslice_quote"></div></div><br /><strong>Paso 2: el código de javascript</strong><br /><br />En el blade principal de la vista (<em>app.blade</em>) agregaremos el script, de dos formas posibles, ya sea a través de un tag que invoque al archivo .js externo:<br /><div class="codeheader">Código: <a href="javascript:void(0);" onclick="return smfSelectText(this);" class="codeoperation">[Seleccionar]</a></div><code class="bbc_code">&lt;script src=&quot;/mi_url/mi_archivo.js&quot;&gt;&lt;/script&gt;</code>Ó agregamos el código directamente:<br /><div class="codeheader">Código: <a href="javascript:void(0);" onclick="return smfSelectText(this);" class="codeoperation">[Seleccionar]</a></div><code class="bbc_code">&lt;script&gt;<br />&nbsp; &nbsp; //mi código lel<br />&lt;/script&gt;</code><br />Resultándo así:<br /><div class="quoteheader"><div class="topslice_quote">Citar</div></div><blockquote class="bbc_standard_quote">&lt;!DOCTYPE html&gt;<br />&lt;html lang=&quot;en&quot;&gt;<br />&lt;head&gt;...&lt;/head&gt;<br />&lt;body&gt;<br />&nbsp;&nbsp;&nbsp;&lt;nav class=&quot;navbar navbar-default&quot;&gt;...&lt;/nav&gt;<br /><br />&nbsp;&nbsp;&nbsp;@yield(&#039;content&#039;)<br /><br />&nbsp;&nbsp;&nbsp;&lt;!-- Scripts --&gt;<br />&nbsp;&nbsp;&nbsp;&lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js&quot;&gt;&lt;/script&gt;<br />&nbsp;&nbsp;&nbsp;&lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.1/js/bootstrap.min.js&quot;&gt;&lt;/script&gt;<br /><br />&nbsp;&nbsp;&nbsp;<strong>@yield(&#039;scripts&#039;)</strong><br />&lt;/body&gt;<br />&lt;/html&gt;<br /></blockquote><div class="quotefooter"><div class="botslice_quote"></div></div><br />Y podemos crear el <em>@section(&#039;scripts&#039;)</em> en el archivo que queramos:<br /><div class="codeheader">Código: <a href="javascript:void(0);" onclick="return smfSelectText(this);" class="codeoperation">[Seleccionar]</a></div><code class="bbc_code">@section(&#039;scripts&#039;)<br />&lt;script&gt;<br />&nbsp; &nbsp; $(document).ready(function () {<br />&nbsp; &nbsp; &nbsp; &nbsp; $(&#039;.btn-delete&#039;).click(function() {<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ...<br />&nbsp; &nbsp; &nbsp; &nbsp; });<br />&nbsp; &nbsp; });<br />});<br />&lt;/script&gt;<br />@endsection</code><br />¿Qué hay que agregar en el script?<br />Pues eso deberían saberlo ustedes! Pues para eso estudiaron js, jquery, ajax y toda esa parafernalia por tantos meses joder! *proyectándose* pero aquí les doy la explicación meticulosa de cada cosa que se ha agregado:<br /><br /><div class="codeheader">Código: <a href="javascript:void(0);" onclick="return smfSelectText(this);" class="codeoperation">[Seleccionar]</a></div><code class="bbc_code">var row = $(this).parents(&#039;tr&#039;);<br />var id = row.attr(&#039;id&#039;);<br />var form = $(&#039;#form-delete&#039;);<br />var url = form.attr(&#039;action&#039;).replace(&#039;:USER_ID&#039;, id);<br />var data = form.serialize();<br /></code><br />Ésto no es nada del otro mundo: <em>row</em> obtiene al elemento <em>&lt;tr&gt;</em> que corresponde al enlace clickeado, <em>id</em> es el atributo &quot;id&quot; (que definimos previamente) del <em>&lt;tr&gt;</em>, <em>form</em> es el formulario oculto, <em>url</em> nos dá el enlace al que debe acceder el formulario para poder ejecutar la acción de borrado.<br /><br />El elemento verdaderamente novedoso aqui es el <em>var data = form.serialize();</em>. Ésto nos arroja como resultado una cadena de texto que contiene los campos ocultos del formulario, en un formato similar al de la información pasada mediante método GET. Es decir, así:<br /><em>_method=DELETE&amp;_token=((una chorrera de números y letras))</em><br /><br />Eso es lo que veríamos precisamente en los campos ocultos del formulario si le damos &quot;inspeccionar elemento&quot; desde Furryfox a la página admin/users (o si le damos en &quot;ver código fuente de la página&quot;, claro):<br /><div class="codeheader">Código: <a href="javascript:void(0);" onclick="return smfSelectText(this);" class="codeoperation">[Seleccionar]</a></div><code class="bbc_code">&lt;form method=&quot;POST&quot; action=&quot;http://curso.basico/admin/users/:USER_ID&quot; accept-charset=&quot;UTF-8&quot; id=&quot;form-delete&quot;&gt;<br />&nbsp; &nbsp; &lt;input name=&quot;_method&quot; type=&quot;hidden&quot; value=&quot;DELETE&quot;&gt;<br />&nbsp; &nbsp; &lt;input name=&quot;_token&quot; type=&quot;hidden&quot; value=&quot;m65RGmFOU0USVcSGkaAbuTGiHJMsZ709ZM5KVq7f&quot;&gt;<br />&lt;/form&gt;</code><br />Luego el script continúa con la siguiente instrucción:<br /><div class="codeheader">Código: <a href="javascript:void(0);" onclick="return smfSelectText(this);" class="codeoperation">[Seleccionar]</a></div><code class="bbc_code">$.post(url, data, function (result) {<br />&nbsp; &nbsp; //<br />});</code><br />El método de jQuery $.post tiene 3 parámetros: la url, los datos, y una función que será el callback en caso de que el método tenga éxito. ¿¿¿Pero qué cojones hace el método $.post()???<br />Tratando de armar el rompecabeza con las piezas que tengo diría que lo que hace es enviar una petición a la url con los datos, y la función recibe en la variable &quot;result&quot; lo que la petición tenga que devolver.<br />En realidad, al parecer el método <em>$.post</em> es un método tipo ajax. Pero si les interesa el tema, pues averiguen.<br /><br />Para hacer una prueba de ello, se haría lo siguiente. En el js se le coloca lo siguiente al método:<br /><div class="quoteheader"><div class="topslice_quote">Citar</div></div><blockquote class="bbc_standard_quote">$.post(url, data, function (result) {<br />&nbsp; &nbsp; <strong>alert(result);</strong><br />});</blockquote><div class="quotefooter"><div class="botslice_quote"></div></div><br />Y, como la petición va a ser atendida por el método <em>destroy()</em> (es la misma url, y entre los datos está <em>_method=DELETE</em>, por lo tanto, que no te quepan dudas, se está llamando a <em>destroy()</em>:<br /><div class="quoteheader"><div class="topslice_quote">Citar</div></div><blockquote class="bbc_standard_quote">public function destroy($id)<br />{<br />&nbsp; &nbsp; <strong>return $id;</strong><br /><br />&nbsp; &nbsp; $this-&gt;user-&gt;delete();<br /><br />&nbsp; &nbsp; Session::flash(&#039;message&#039;, &#039;El usuario &lt;strong&gt;&#039; . $this-&gt;user-&gt;name . &#039;&lt;/strong&gt; fue exitosamente borrado!&#039;);<br />&nbsp; &nbsp; return redirect()-&gt;route(&#039;admin.users.index&#039;);<br />}<br /></blockquote><div class="quotefooter"><div class="botslice_quote"></div></div><br />La línea <em>return redirect()-&gt;route(&#039;admin.users.index&#039;);</em> devolverá algo que no nos interesa, por lo que agregamos el <em>return $id;</em> y el código no va a hacer más nada despues de eso, salvo retornar la Id. <strong>Importante:</strong> en el enlace &quot;eliminar&quot;, en el atributo &quot;href&quot; debe haber un &quot;#&quot;, si se deja vacío, jamás se verá el alert(), aparentemente porque recarga la página. También se puede prevenir que recargue agregándole lo siguiente al javascript:<br /><br /><div class="quoteheader"><div class="topslice_quote">Citar</div></div><blockquote class="bbc_standard_quote">$(document).ready(function () {<br />&nbsp; &nbsp; $(&#039;.btn-delete&#039;).click(function(e) {<br />&nbsp; &nbsp; &nbsp; &nbsp; <strong>e.preventDefault();</strong><br /><br />&nbsp; &nbsp; &nbsp; &nbsp; var row = $(this).parents(&#039;tr&#039;);<br />&nbsp; &nbsp; &nbsp; &nbsp; var id = row.attr(&#039;id&#039;);<br />&nbsp; &nbsp; &nbsp; &nbsp; var form = $(&#039;#form-delete&#039;);<br />&nbsp; &nbsp; &nbsp; &nbsp; var url = form.attr(&#039;action&#039;).replace(&#039;:USER_ID&#039;, id);<br />&nbsp; &nbsp; &nbsp; &nbsp; var data = form.serialize();<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; $.post(url, data, function (result) {<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; alert(result);<br />&nbsp; &nbsp; &nbsp; &nbsp; });<br />&nbsp; &nbsp; });<br />});</blockquote><div class="quotefooter"><div class="botslice_quote"></div></div><br />Ahora haremos la siguiente modificación al método <em>destroy()</em> para que haga lo que tiene que hacer, y al mismo tiempo muestre un mensaje adecuado:<br /><br /><div class="quoteheader"><div class="topslice_quote">Citar</div></div><blockquote class="bbc_standard_quote">public function destroy($id<strong>, \Illuminate\Http\Request $request</strong>)<br />{<br />&nbsp; &nbsp; $this-&gt;user-&gt;delete();<br /><br />&nbsp; &nbsp; if (<strong>$request-&gt;ajax()</strong>)<br />&nbsp; &nbsp; {<br />&nbsp; &nbsp; &nbsp; &nbsp; return &#039;El usuario &#039; . $this-&gt;user-&gt;name . &#039; fue exitosamente borrado!&#039;;<br />&nbsp; &nbsp; }<br /><br />&nbsp; &nbsp; Session::flash(&#039;message&#039;, &#039;El usuario &lt;strong&gt;&#039; . $this-&gt;user-&gt;name . &#039;&lt;/strong&gt; fue exitosamente borrado!&#039;);<br />&nbsp; &nbsp; return redirect()-&gt;route(&#039;admin.users.index&#039;);<br />}<br /></blockquote><div class="quotefooter"><div class="botslice_quote"></div></div><br />Y ahora, se borrarán los usuarios tras hacer click en el enlace &quot;eliminar&quot;, sin embargo, para poder verlo, es necesario recargar la página, ésto podría confundir al usuario, por lo que hay que añadir lineas adicionales de código que oculten al usuario recién eliminado.<br /><br /><div class="quoteheader"><div class="topslice_quote">Citar</div></div><blockquote class="bbc_standard_quote">$.post(url, data, function (result) {<br />&nbsp; &nbsp; alert(result);<br />&nbsp; &nbsp; row.fadeOut();<br />}).fail(function () {<br />&nbsp; &nbsp; alert(&quot;Ha ocurrido un error. Asegúrate de que aún tienes acceso a internet.&quot;);<br />});<br /></blockquote><div class="quotefooter"><div class="botslice_quote"></div></div><br />Podemos simular un fallo en la petición <em>$.post()</em>, agregando en la primera linea del método <em>destroy()</em> el comando <em>abort(500)</em>.<br /><br /><strong>Consultas mediante Json</strong><br /><br /><div class="quoteheader"><div class="topslice_quote">Citar</div></div><blockquote class="bbc_standard_quote">if ($request-&gt;ajax())<br />{<br />&nbsp; &nbsp; return response()-&gt;json([<br />&nbsp; &nbsp; &nbsp; &nbsp; &#039;id&#039; =&gt; $this-&gt;user-&gt;id,<br />&nbsp; &nbsp; &nbsp; &nbsp; &#039;message&#039; =&gt; &#039;El usuario &#039; . $this-&gt;user-&gt;name . &#039; fue exitosamente borrado!&#039;<br />&nbsp; &nbsp; ]);<br />}<br /></blockquote><div class="quotefooter"><div class="botslice_quote"></div></div><div class="quoteheader"><div class="topslice_quote">Citar</div></div><blockquote class="bbc_standard_quote">$.post(url, data, function (result) {<br />&nbsp; &nbsp; alert(result.message);<br />&nbsp; &nbsp; row.fadeOut();<br />}).fail(function () {<br />&nbsp; &nbsp; alert(&quot;Ha ocurrido un error. Asegúrate de que aún tienes acceso a internet.&quot;);<br />});<br /></blockquote><div class="quotefooter"><div class="botslice_quote"></div></div>
