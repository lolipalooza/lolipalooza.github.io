---
thread: "Notas sobre Laravel"
id_msg: 5672
date: "2016-02-26 16:36:17"

subject: "Re:Notas sobre Laravel"
user: "yap320sorgesoureDug"

modified_time: 2016-02-29 20:28:45
modified_name: "yap320sorgesoureDug"
icon: xx



edit_reason: "pos nomas"
---
<strong><span style="font-size: 14pt;" class="bbc_size">Eliminar usuarios: el método <em>destroy</em></span></strong><br /><br />Si analizamos la lista de rutas (cónsola: <em>php artisan route:list</em>)<br /><div class="codeheader">Código: <a href="javascript:void(0);" onclick="return smfSelectText(this);" class="codeoperation">[Seleccionar]</a></div><code class="bbc_code">|&nbsp; &nbsp; &nbsp; &nbsp; | DELETE&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;| admin/users/{users}&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; | admin.users.destroy | App\Http\Controllers\Admin\UsersController@destroy</code>Veremos que el método <em>destroy()</em> tiene como método de acceso el DELETE, lo que significa que a la hora de querer crear un enlace a la url que llamará al método, es necesario hacerlo mediante un fomulario (ojo: de alto nivel, mediante Laravel) que contenga el método DELETE. Si no se hace eso, entonces nunca será llamado el <em>destroy()</em>.<br /><strong>Nota: </strong>aunque dentro de Laravel decimos que el método del formulario es DELETE, en la realidad, en el HTML puro, eso no es cierto, el método sigue siendo o POST o GET, pero el framework introduce un campo oculto (&lt;input type=&quot;hidden&quot;&gt;) con el valor de DELETE.<br /><br />En destroy() se añade lo siguiente:<br /><div class="codeheader">Código: <a href="javascript:void(0);" onclick="return smfSelectText(this);" class="codeoperation">[Seleccionar]</a></div><code class="bbc_code">public function destroy($id)<br />{<br />&nbsp; &nbsp; User::destroy($id);<br />&nbsp; &nbsp; return redirect()-&gt;route(&#039;admin.users.index&#039;);<br />}<br /></code><br />Y eso es todo lo necesario para eliminar un registro. Sin embargo, en una página de verdad sería necesario añadir adicionalmente una advertencia previa al proceso de borrado para evitar que los usuarios cometan errores, pero eso ya sería tema aparte.<br /><br />Alternativamente podemos eliminar registros del siguiente modo:<br /><div class="codeheader">Código: <a href="javascript:void(0);" onclick="return smfSelectText(this);" class="codeoperation">[Seleccionar]</a></div><code class="bbc_code">public function destroy($id)<br />{<br />&nbsp; &nbsp; $user = User::findOrFail($id);<br />&nbsp; &nbsp; $user-&gt;delete();<br />&nbsp; &nbsp; return redirect()-&gt;route(&#039;admin.users.index&#039;);<br />}<br /></code><br />Para pedir confirmación, habría que agregar el siguiente método de javascript al botón (o enlace) de eliminación:<br /><div class="codeheader">Código: <a href="javascript:void(0);" onclick="return smfSelectText(this);" class="codeoperation">[Seleccionar]</a></div><code class="bbc_code">onclick=&quot;return confirm(&#039;Seguro que desea eliminar?&#039;)&quot;</code><br /><strong>Soft deletes</strong><br /><br />También pueden ser realizados borrados &quot;suaves&quot; de registros con Laravel, lo que significa que los registros no son eliminados de la base de datos, sino que simplemente una columna adicional contiene un flag que dice si están borrados o no.<br />TODO: averiguar como.
