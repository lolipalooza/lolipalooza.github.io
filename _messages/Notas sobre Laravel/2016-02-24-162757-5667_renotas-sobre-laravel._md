---
thread: "Notas sobre Laravel"
id_msg: 5667
date: "2016-02-24 16:27:57"

subject: "Re:Notas sobre Laravel"
user: "yap320sorgesoureDug"

modified_time: 2016-02-24 19:48:26
modified_name: "yap320sorgesoureDug"
icon: xx



edit_reason: "pos nomas"
---
<strong><span style="font-size: 14pt;" class="bbc_size">Modelos - almacenando nuevos elementos del modelo en bases de datos</span></strong><br /><br />Es tan simple como hacer lo siguiente:<br /><br /><div class="codeheader">Código: <a href="javascript:void(0);" onclick="return smfSelectText(this);" class="codeoperation">[Seleccionar]</a></div><code class="bbc_code">...<br />function store(/Illuminate/Http/Request $request)<br />{<br />&nbsp; &nbsp; $user = new User($request-&gt;all());<br />&nbsp; &nbsp; $user-&gt;save();<br />}<br />...<br /></code><br />Alternativamente:<br /><div class="codeheader">Código: <a href="javascript:void(0);" onclick="return smfSelectText(this);" class="codeoperation">[Seleccionar]</a></div><code class="bbc_code">function store(/Illuminate/Http/Request $request)<br />{<br />&nbsp; &nbsp; $user = new User();<br />&nbsp; &nbsp; $user-&gt;fill($request-&gt;all());<br />&nbsp; &nbsp; $user-&gt;save();<br />}<br /></code><br />O aún más fácil:<br /><div class="codeheader">Código: <a href="javascript:void(0);" onclick="return smfSelectText(this);" class="codeoperation">[Seleccionar]</a></div><code class="bbc_code">function store(/Illuminate/Http/Request $request)<br />{<br />&nbsp; &nbsp; $user = User::create($request-&gt;all());<br />}</code><br />O todavía más fácil:<br /><div class="codeheader">Código: <a href="javascript:void(0);" onclick="return smfSelectText(this);" class="codeoperation">[Seleccionar]</a></div><code class="bbc_code">use Illuminate/Support/Facade/Request<br />....<br />function store()<br />{<br />&nbsp; &nbsp; $user = User::create(Request::all());<br />}</code><br /><br />Sin embargo, hay un detalle que hay que tener en cuenta para que esas líneas de código funcionen correctamente: <em>$request-&gt;all()</em> puede devolver un arreglo con la siguiente estructura:<br />&#91;&#039;first_name&#039; =&gt; &#039;hielitos&#039;,<br />&#039;last_name&#039; =&gt; &#039;rodriguez flores&#039;,<br />&#039;email&#039; =&gt; &#039;<a href="mailto:hielitos@cirno.ci" class="bbc_email">hielitos@cirno.ci</a>&#039;<br />&#039;password&#039; =&gt; &#039;0123456&#039;,<br />&#039;type&#039; =&gt; &#039;superadmin&#039;]<br /><br />Para que el anterior arreglo pueda ser almacenado correctamente en la base de datos, es necesario que cada uno de los campos de dicho arreglo se correspondan con la propiedad <em>$fillable</em> definida dentro del modelo <em>User</em>.<br /><br />En cambio, si en el archivo <em>App/User.php</em> la propiedad está definida como:<br /><div class="codeheader">Código: <a href="javascript:void(0);" onclick="return smfSelectText(this);" class="codeoperation">[Seleccionar]</a></div><code class="bbc_code">protected $fillable = &#91;&#039;name&#039;, &#039;email&#039;, &#039;password&#039;];</code>Entonces <em>&#039;name&#039;</em> resultará vacío porque no hay ningun campo <em>&#039;name&#039;</em>, en el arreglo, y los datos contenidos en el arreglo correspondientes a <em>&#039;first_name&#039;</em>, <em>&#039;last_name&#039;</em> y <em>&#039;type&#039;</em> no tendrán ningún lugar en el modelo <em>User</em> donde ser almacenados, y se perderán.<br /><br /><strong>Encriptación de contraseña al momento de salvar los datos recién recibidos</strong><br />Archivo <em>App/<strong>User.php</strong></em>:<br /><div class="codeheader">Código: <a href="javascript:void(0);" onclick="return smfSelectText(this);" class="codeoperation">[Seleccionar]</a></div><code class="bbc_code">public function setPasswordAttribute($value)<br />{<br />&nbsp; &nbsp; $this-&gt;attributes&#91;&#039;password&#039;] = \Hash::make($value);&nbsp; &nbsp; // opcionalmente: bcrypt($value);<br />}<br /></code>
